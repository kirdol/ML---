---
title: "Unsupervised Learning"
format: pdf
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
library(data.table)
data <- fread(here::here("data", "Vehicle MPG - 1984 to 2023.csv"))
```

```{r}
# Selecting all columns except 'ID'
data_interest <- data %>%
  dplyr::select(-ID)%>%  # exclude the 'ID' column
  mutate_if(is.integer, as.numeric) %>%  # convert all integer columns to numeric
  select_if(~ !is.character(.)) %>%
  select_if(~ var(.) != 0)

# Initialize matrices for correlations, p-values
n <- ncol(data_interest)
cor_matrix <- matrix(1, n, n)
p_matrix <- matrix(NA, n, n)
colnames(cor_matrix) <- colnames(data_interest)
rownames(cor_matrix) <- colnames(data_interest)

# Calculating correlations and p-values
for (i in 1:n) {
  for (j in 1:n) {
    if (i != j) {
      test <- cor.test(data_interest[[i]],
                       data_interest[[j]],
                       method = "spearman")
      cor_matrix[i, j] <- test$estimate
      p_matrix[i, j] <- test$p.value
    }
  }
}

# Set a threshold for displaying text on the heatmap
threshold_heatmap <- 0.2  # adjust this based on your preference

# Melting the correlation matrix for ggplot
melted_corr <- melt(cor_matrix)

# Creating the heatmap
ggplot(melted_corr, aes(x = Var1, y = Var2, fill = value)) +
  geom_tile() +
  geom_text(aes(label = ifelse(abs(value) > threshold_heatmap,
                               sprintf("%.2f", value), "")), 
            vjust = 0.5, size = 2.5) +
  scale_fill_viridis_c(name = "Spearman\nCorrelation", begin = 0.15) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = paste("Heatmap of Spearman Correlations \n(Only correlation values higher than ",
                     threshold_heatmap,
                     " are shown)", sep = ""),
       x = "",
       y = "")
```

```{r}

```

